import { useState, useEffect } from 'react'
import '../../reset.css'
import styled from 'styled-components'
import SizedBox from '../components/common/SizedBox'

export const Options = () => {
  const [countSync, setCountSync] = useState(0)
  const [color, setColor] = useState('#FFFFFF') // 초기 색상 설정
  const link = 'https://github.com/guocaoyi/create-chrome-ext'

  useEffect(() => {
    chrome.storage.sync.get(['count'], (result) => {
      setCountSync(result.count || 0)
    })

    chrome.runtime.onMessage.addListener((request) => {
      if (request.type === 'COUNT') {
        setCountSync(request.count || 0)
      }
    })

    const intervalId = setInterval(() => {
      // 랜덤 색상 생성
      const newColor = '#' + Math.floor(Math.random() * 16777215).toString(16)
      setColor(newColor)
    }, 200)

    return () => clearInterval(intervalId)
  }, [])

  return (
    <Wrapper>
      <Title style={{ color: color }}>ClipBoarder</Title>
      <SizedBox height={40} />
      <SubTitle>
        <Highlight>더</Highlight> 빠르게, <Highlight>더</Highlight> 편리하게
      </SubTitle>
      <SizedBox height={60} />
      <Description>지금 바로 시작해보세요</Description>
      {/* <h4>Count from Popup: {countSync}</h4>
      <a href={link} target="_blank" rel="noopener noreferrer">
        generated by create-chrome-ext
      </a> */}
    </Wrapper>
  )
}

export default Options

const Wrapper = styled.div`
  background: rgba(0, 0, 0, 0.8);
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
`

const Title = styled.p`
  font-size: 7rem;
  color: white;
`

const SubTitle = styled.h2`
  color: white;
  font-size: 2rem;
`

const Description = styled.p`
  color: white;
  font-size: 1.5rem;
`

const Highlight = styled.span`
  font-size: 2.5rem;
`
